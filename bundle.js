(()=>{"use strict";function e(e,t,n){const r=e.createShader(t);if(e.shaderSource(r,n),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS)){const t=e.getShaderInfoLog(r);throw e.deleteShader(r),new Error("Shader compile error: "+t+"\n"+n)}return r}function t(t,n,r,a={},i=null){const o=e(t,t.VERTEX_SHADER,n),l=e(t,t.FRAGMENT_SHADER,r),f=t.createProgram();t.attachShader(f,o),t.attachShader(f,l);for(const[e,n]of Object.entries(a))t.bindAttribLocation(f,n,e);if(i&&t.transformFeedbackVaryings(f,i,t.SEPARATE_ATTRIBS),t.linkProgram(f),!t.getProgramParameter(f,t.LINK_STATUS)){const e=t.getProgramInfoLog(f);throw t.deleteProgram(f),new Error("Program link error: "+e)}return f}function n(e,t,n){const r=e.createTexture();return e.bindTexture(e.TEXTURE_2D,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t,n,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindTexture(e.TEXTURE_2D,null),r}function r(e,t){const n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;if(e.bindFramebuffer(e.FRAMEBUFFER,null),!r)throw new Error("Framebuffer incomplete");return n}const a="attribute vec2 a_pos;\nvarying vec2 v_uv;\nvoid main(){ v_uv = a_pos*0.5 + 0.5; gl_Position = vec4(a_pos,0.0,1.0); }\n",i="precision highp float;\nvarying float v_bright;\nvarying float v_type;\n\nfloat hash(float n){ return fract(sin(n) * 43758.5453123); }\nfloat noise(vec2 p){ return hash(p.x * 12.9898 + p.y * 78.233); }\n\nvoid main(){\n  vec2 p = gl_PointCoord * 2.0 - 1.0;\n  float r = length(p);\n  float density = exp(-2.5 * r * r);\n  float n = noise(p + v_bright);\n  density *= mix(0.7, 1.3, n);\n  float core = mix(0.9, 1.3, v_type);\n  float glow = mix(0.6, 1.0, v_type);\n  vec3 col = vec3(1.0) * (v_bright * core * density);\n  float alpha = density * glow;\n  gl_FragColor = vec4(col, alpha);\n}\n",o={perspective(e,t,n,r,a){const i=1/Math.tan(.5*t),o=1/(r-a);return e[0]=i/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(a+r)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*a*r*o,e[15]=0,e},lookAt(e,t,n,r){let a=t[0]-n[0],i=t[1]-n[1],o=t[2]-n[2],l=1/Math.hypot(a,i,o);a*=l,i*=l,o*=l;let f=r[1]*o-r[2]*i,u=r[2]*a-r[0]*o,s=r[0]*i-r[1]*a;l=1/Math.hypot(f,u,s),f*=l,u*=l,s*=l;let c=i*s-o*u,d=o*f-a*s,_=a*u-i*f;return e[0]=f,e[1]=c,e[2]=a,e[3]=0,e[4]=u,e[5]=d,e[6]=i,e[7]=0,e[8]=s,e[9]=_,e[10]=o,e[11]=0,e[12]=-(f*t[0]+u*t[1]+s*t[2]),e[13]=-(c*t[0]+d*t[1]+_*t[2]),e[14]=-(a*t[0]+i*t[1]+o*t[2]),e[15]=1,e},multiply(e,t,n){const r=t[0],a=t[1],i=t[2],o=t[3],l=t[4],f=t[5],u=t[6],s=t[7],c=t[8],d=t[9],_=t[10],b=t[11],R=t[12],v=t[13],A=t[14],m=t[15],F=n[0],h=n[1],E=n[2],g=n[3],p=n[4],B=n[5],T=n[6],y=n[7],x=n[8],M=n[9],U=n[10],w=n[11],L=n[12],S=n[13],D=n[14],P=n[15];return e[0]=r*F+l*h+c*E+R*g,e[1]=a*F+f*h+d*E+v*g,e[2]=i*F+u*h+_*E+A*g,e[3]=o*F+s*h+b*E+m*g,e[4]=r*p+l*B+c*T+R*y,e[5]=a*p+f*B+d*T+v*y,e[6]=i*p+u*B+_*T+A*y,e[7]=o*p+s*B+b*T+m*y,e[8]=r*x+l*M+c*U+R*w,e[9]=a*x+f*M+d*U+v*w,e[10]=i*x+u*M+_*U+A*w,e[11]=o*x+s*M+b*U+m*w,e[12]=r*L+l*S+c*D+R*P,e[13]=a*L+f*S+d*D+v*P,e[14]=i*L+u*S+_*D+A*P,e[15]=o*L+s*S+b*D+m*P,e}};let l=5e4;const f=1/30,u=20,s=256,c={"Ambient (α+β)":{mix:[{type:"alpha",frac:.3,speed:2.2,life:3.5,size:26,bright:1.05,qScale:1},{type:"beta",frac:.7,speed:7,life:7,size:10,bright:.65,qScale:1}]},"Am-241 (α)":{mix:[{type:"alpha",frac:1,speed:2.1,life:3.8,size:28,bright:1.15,qScale:.8}]},"Po-210 (α)":{mix:[{type:"alpha",frac:1,speed:2,life:3.4,size:28,bright:1.2,qScale:.8}]},"Rn-222 (α)":{mix:[{type:"alpha",frac:1,speed:2,life:3.2,size:26,bright:1.1,qScale:.85}]},"Sr-90 (β−)":{mix:[{type:"beta",frac:1,speed:6.5,life:7.5,size:9,bright:.6,qScale:1.2}]},"Cs-137 (β−)":{mix:[{type:"beta",frac:1,speed:7.5,life:8,size:10,bright:.62,qScale:1.2}]},"Co-60 (β−)":{mix:[{type:"beta",frac:1,speed:5.5,life:6.8,size:9,bright:.6,qScale:1.1}]},"Th-232 chain (α+β)":{mix:[{type:"alpha",frac:.6,speed:2,life:3.5,size:27,bright:1.1,qScale:.85},{type:"beta",frac:.4,speed:6.8,life:7.5,size:10,bright:.62,qScale:1.15}]},"Cosmic Muons (μ)":{cosmic:!0}},d=document.createElement("canvas");document.getElementById("app").appendChild(d);const _=function(e){let t=e.getContext("webgl2",{alpha:!1,antialias:!0,preserveDrawingBuffer:!1});if(t)return t;if(t=e.getContext("webgl",{alpha:!1,antialias:!0,preserveDrawingBuffer:!1})||e.getContext("experimental-webgl",{alpha:!1,antialias:!0,preserveDrawingBuffer:!1}),!t)throw new Error("WebGL not supported");return t}(d),b="undefined"!=typeof WebGL2RenderingContext&&_ instanceof WebGL2RenderingContext;b||(l=1e4);const R=t(_,a,"precision highp float;\nvarying vec2 v_uv;\nuniform sampler2D u_tex;\nvoid main(){ gl_FragColor = texture2D(u_tex, v_uv); }\n"),v=t(_,a,"precision highp float;\nvarying vec2 v_uv;\nuniform sampler2D u_prev;\nuniform float u_decay;\nuniform vec2 u_texel;\nvoid main(){\n  vec4 col = texture2D(u_prev, v_uv) * 0.4;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(1.0, 0.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(-1.0, 0.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(0.0, 1.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(0.0, -1.0)) * 0.15;\n  gl_FragColor = vec4(col.rgb * u_decay, 1.0);\n}\n"),A=t(_,"precision highp float;\nattribute vec3 a_pos;\nattribute float a_size;\nattribute float a_brightness;\nattribute float a_type; // 0=beta,1=alpha\nattribute float a_active;\nuniform mat4 u_viewProj;\nuniform float u_dpr;\nvarying float v_bright;\nvarying float v_type;\nvoid main(){\n  v_bright = a_brightness;\n  v_type = a_type;\n  // Cull inactive particles by moving them off-screen and giving them a size\n  // of zero. This allows us to draw a fixed number of vertices every frame\n  // without updating an index buffer.\n  if (a_active < 0.5) {\n    gl_Position = vec4(2.0, 2.0, 2.0, 1.0);\n    gl_PointSize = 0.0;\n    return;\n  }\n  vec4 clip = u_viewProj * vec4(a_pos, 1.0);\n  gl_Position = clip;\n  float size = (a_size * u_dpr) / max(0.1, clip.w);\n  gl_PointSize = size;\n}\n",i),m=t(_,"precision highp float;\nattribute vec3 a_pos;\nattribute float a_size;\nattribute float a_brightness;\nattribute float a_type;\nattribute float a_active;\nuniform float u_bounds;\nuniform float u_dpr;\nvarying float v_bright;\nvarying float v_type;\nvoid main(){\n  v_bright = a_brightness;\n  v_type = a_type;\n  if (a_active < 0.5) {\n    gl_Position = vec4(2.0, 2.0, 0.0, 1.0);\n    gl_PointSize = 0.0;\n    return;\n  }\n  gl_Position = vec4(a_pos.x/u_bounds, a_pos.z/u_bounds, 0.0, 1.0);\n  gl_PointSize = a_size * u_dpr;\n}\n",i),F=t(_,"attribute vec3 a_pos;\nuniform mat4 u_viewProj;\nvoid main(){ gl_Position = u_viewProj * vec4(a_pos, 1.0); }\n","precision highp float;\nuniform vec3 u_color;\nvoid main(){ gl_FragColor = vec4(u_color, 1.0); }\n");let h=null;b&&(h=t(_,"#version 300 es\nprecision highp float;\n\nin vec4 a_state1; // xyz, life\nin vec4 a_state2; // vx vy vz type\nin vec4 a_state3; // size, bright, active, qScale\n\nuniform float u_dt;\nuniform float u_bounds;\nuniform float u_dragBase;\nuniform float u_jitter;\nuniform float u_B;\n\nout vec4 v_state1;\nout vec4 v_state2;\nout vec4 v_state3;\n\nfloat rand(float seed) {\n  return fract(sin(seed) * 43758.5453123);\n}\n\nvoid main() {\n  vec3 pos = a_state1.xyz;\n  float life = a_state1.w;\n  vec3 vel = a_state2.xyz;\n  float type = a_state2.w;\n  float size = a_state3.x;\n  float bright = a_state3.y;\n  float bActive = a_state3.z;\n  float qScale = a_state3.w;\n\n  if (bActive > 0.5) {\n    float qBase = type > 0.5 ? 0.6 : 1.0;\n    float q = qBase * qScale;\n    vec3 Bvec = vec3(0.0, u_B, 0.0);\n    vec3 acc = q * cross(vel, Bvec);\n    vel += acc * u_dt;\n    float drag = exp(-u_dragBase * u_dt);\n    vel *= drag;\n    float seed = float(gl_VertexID);\n    vel += vec3(\n      (rand(seed * 12.9898) * 2.0 - 1.0) * u_jitter * u_dt,\n      (rand(seed * 78.233) * 2.0 - 1.0) * u_jitter * u_dt * 0.5,\n      (rand(seed * 37.719) * 2.0 - 1.0) * u_jitter * u_dt\n    );\n    pos += vel * u_dt;\n    life -= u_dt;\n    bActive = (life > 0.0 && all(lessThan(abs(pos), vec3(u_bounds)))) ? 1.0 : 0.0;\n    bright = bright * max(0.25, life * 0.15);\n  }\n\n  v_state1 = vec4(pos, life);\n  v_state2 = vec4(vel, type);\n  v_state3 = vec4(size, bright, bActive, qScale);\n}\n","#version 300 es\nprecision highp float;\nvoid main(){}\n",{},["v_state1","v_state2","v_state3"]));const E=_.createBuffer();_.bindBuffer(_.ARRAY_BUFFER,E),_.bufferData(_.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),_.STATIC_DRAW);const g=_.createBuffer(),p=[[-u,-u,-u],[u,-u,-u],[u,-u,-u],[u,-u,u],[u,-u,u],[-u,-u,u],[-u,-u,u],[-u,-u,-u],[-u,u,-u],[u,u,-u],[u,u,-u],[u,u,u],[u,u,u],[-u,u,u],[-u,u,u],[-u,u,-u],[-u,-u,-u],[-u,u,-u],[u,-u,-u],[u,u,-u],[u,-u,u],[u,u,u],[-u,-u,u],[-u,u,u]].flat();_.bindBuffer(_.ARRAY_BUFFER,g),_.bufferData(_.ARRAY_BUFFER,new Float32Array(p),_.STATIC_DRAW);let B,T,y,x,M,U,w,L,S=2,D=2,P=1;function I(){_.disable(_.BLEND),_.bindFramebuffer(_.FRAMEBUFFER,y),_.clearColor(0,0,0,1),_.clear(_.COLOR_BUFFER_BIT),_.bindFramebuffer(_.FRAMEBUFFER,x),_.clearColor(0,0,0,1),_.clear(_.COLOR_BUFFER_BIT),w&&Y(),_.bindFramebuffer(_.FRAMEBUFFER,null)}function Y(){_.disable(_.BLEND),_.bindFramebuffer(_.FRAMEBUFFER,w),_.clearColor(0,0,0,1),_.clear(_.COLOR_BUFFER_BIT),_.bindFramebuffer(_.FRAMEBUFFER,L),_.clearColor(0,0,0,1),_.clear(_.COLOR_BUFFER_BIT),_.bindFramebuffer(_.FRAMEBUFFER,null)}function C(){P=Math.min(2,window.devicePixelRatio||1);const e=Math.max(2,Math.floor(window.innerWidth*P)),t=Math.max(2,Math.floor(window.innerHeight*P));e===S&&t===D||(S=e,D=t,d.width=e,d.height=t,d.style.width="100%",d.style.height="100%",_.viewport(0,0,e,t),function(e,t){B&&_.deleteTexture(B),T&&_.deleteTexture(T),y&&_.deleteFramebuffer(y),x&&_.deleteFramebuffer(x),B=n(_,e,t),T=n(_,e,t),y=r(_,B),x=r(_,T),I()}(e,t))}window.addEventListener("resize",C),C(),M&&_.deleteTexture(M),U&&_.deleteTexture(U),w&&_.deleteFramebuffer(w),L&&_.deleteFramebuffer(L),M=n(_,s,s),U=n(_,s,s),w=r(_,M),L=r(_,U),Y();let O=.6,z=.2,N=14,X=!1,q=0,V=0,G=!1,W=0;function k(){const e=[N*Math.cos(z)*Math.cos(O),N*Math.sin(z),N*Math.cos(z)*Math.sin(O)],t=new Float32Array(16),n=new Float32Array(16),r=new Float32Array(16);o.lookAt(t,e,[0,0,0],[0,1,0]);const a=60*Math.PI/180;return o.perspective(n,a,S/D,.1,400),o.multiply(r,n,t),r}d.addEventListener("mousedown",e=>{X=!0,q=e.clientX,V=e.clientY}),window.addEventListener("mouseup",()=>X=!1),window.addEventListener("mousemove",e=>{if(!X)return;const t=(e.clientX-q)/window.innerWidth,n=(e.clientY-V)/window.innerHeight;O+=3*t,z=Math.max(-1.2,Math.min(1.2,z+3*n)),q=e.clientX,V=e.clientY}),window.addEventListener("wheel",e=>{const t=1/N*100;N=Math.max(4,Math.min(100,N+Math.sign(e.deltaY)*t))}),d.addEventListener("touchstart",e=>{if(1===e.touches.length){X=!0;const t=e.touches[0];q=t.clientX,V=t.clientY}else if(2===e.touches.length){G=!0;const t=e.touches[0].clientX-e.touches[1].clientX,n=e.touches[0].clientY-e.touches[1].clientY;W=Math.hypot(t,n)}e.preventDefault()},{passive:!1}),window.addEventListener("touchend",e=>{0===e.touches.length&&(X=!1),e.touches.length<2&&(G=!1)}),window.addEventListener("touchcancel",()=>{X=!1,G=!1}),window.addEventListener("touchmove",e=>{if(G&&2===e.touches.length){const t=e.touches[0].clientX-e.touches[1].clientX,n=e.touches[0].clientY-e.touches[1].clientY,r=Math.hypot(t,n),a=r-W,i=10;return N=Math.max(4,Math.min(100,N-a*i)),W=r,void e.preventDefault()}if(X&&1===e.touches.length){const t=e.touches[0],n=(t.clientX-q)/window.innerWidth,r=(t.clientY-V)/window.innerHeight;O+=3*n,z=Math.max(-1.2,Math.min(1.2,z+3*r)),q=t.clientX,V=t.clientY,e.preventDefault()}},{passive:!1});let j,H,K,Z,$=null,J=0;if(b){const e=[_.createBuffer(),_.createBuffer(),_.createBuffer()],t=[_.createBuffer(),_.createBuffer(),_.createBuffer()];for(const n of[...e,...t])_.bindBuffer(_.ARRAY_BUFFER,n),_.bufferData(_.ARRAY_BUFFER,new Float32Array(4*l),_.DYNAMIC_COPY);j=e,$=t}else{j=[_.createBuffer(),_.createBuffer(),_.createBuffer()],H=new Float32Array(4*l),K=new Float32Array(4*l),Z=new Float32Array(4*l);const e=[H,K,Z];for(let t=0;t<3;t++)_.bindBuffer(_.ARRAY_BUFFER,j[t]),_.bufferData(_.ARRAY_BUFFER,e[t],_.DYNAMIC_DRAW)}function Q(e){const t=ie.value,n=c[t]||c["Ambient (α+β)"];if(n.cosmic){const e=18,t=(2*Math.random()-1)*e,n=(2*Math.random()-1)*e,r=22,a=[.1*Math.random()-.05,-1,.1*Math.random()-.05],i=30,o=50;return void ee(t,r,n,a[0]*i,a[1]*i,a[2]*i,o,0,8,.5,.05)}const r=function(e){const t=Math.random();let n=0;for(const r of e)if(n+=r.frac,t<=n)return r;return e[e.length-1]}(n.mix),a=function(){const e=2*Math.random()-1,t=Math.random()*Math.PI*2,n=Math.sqrt(Math.max(0,1-e*e));return[n*Math.cos(t),n*Math.sin(t),e]}(),i=r.speed*(.85+.3*Math.random()),o=r.life*(.9+.3*Math.random()),l="alpha"===r.type?1:0;ee(e[0],e[1],e[2],a[0]*i,a[1]*i,a[2]*i,o,l,r.size,r.bright,r.qScale)}function ee(e,t,n,r,a,i,o,f,u,s,c){const d=J;if(J=(J+1)%l,b)_.bindBuffer(_.ARRAY_BUFFER,j[0]),_.bufferSubData(_.ARRAY_BUFFER,16*d,new Float32Array([e,t,n,o])),_.bindBuffer(_.ARRAY_BUFFER,j[1]),_.bufferSubData(_.ARRAY_BUFFER,16*d,new Float32Array([r,a,i,f])),_.bindBuffer(_.ARRAY_BUFFER,j[2]),_.bufferSubData(_.ARRAY_BUFFER,16*d,new Float32Array([u,s,1,c||1]));else{const l=4*d;H.set([e,t,n,o],l),K.set([r,a,i,f],l),Z.set([u,s,1,c||1],l),_.bindBuffer(_.ARRAY_BUFFER,j[0]),_.bufferSubData(_.ARRAY_BUFFER,16*d,H.subarray(l,l+4)),_.bindBuffer(_.ARRAY_BUFFER,j[1]),_.bufferSubData(_.ARRAY_BUFFER,16*d,K.subarray(l,l+4)),_.bindBuffer(_.ARRAY_BUFFER,j[2]),_.bufferSubData(_.ARRAY_BUFFER,16*d,Z.subarray(l,l+4))}}d.addEventListener("click",e=>{Q(function(e,t){const n=O,r=z,a=N,i=[a*Math.cos(r)*Math.cos(n),a*Math.sin(r),a*Math.cos(r)*Math.sin(n)],o=e/window.innerWidth*2-1,l=1-t/window.innerHeight*2,f=[-i[0],-i[1],-i[2]],u=Math.hypot(f[0],f[1],f[2]);f[0]/=u,f[1]/=u,f[2]/=u;let s=[f[2],0,-f[0]],c=Math.hypot(s[0],s[1],s[2]);s=[s[0]/c,s[1]/c,s[2]/c];let d=[s[1]*f[2]-s[2]*f[1],s[2]*f[0]-s[0]*f[2],s[0]*f[1]-s[1]*f[0]];const _=60*Math.PI/180,b=window.innerWidth/window.innerHeight,R=Math.tan(_/2),v=[f[0]+o*b*R*s[0]+l*R*d[0],f[1]+o*b*R*s[1]+l*R*d[1],f[2]+o*b*R*s[2]+l*R*d[2]],A=-i[1]/(v[1]||1e-6);return[i[0]+v[0]*A,0,i[2]+v[2]*A]}(e.clientX,e.clientY))});const te=document.getElementById("bRange"),ne=document.getElementById("vRange"),re=document.getElementById("rRange"),ae=document.getElementById("trailRange"),ie=document.getElementById("isoSelect"),oe=document.getElementById("toggleBtn"),le=document.getElementById("clearBtn"),fe=document.getElementById("densityBtn"),ue=document.getElementById("settingsBtn"),se=document.getElementById("settingsPanel");function ce(){if(se.classList.contains("open")){const e=se.offsetWidth;ue.style.transform=`translateX(${e}px)`}else ue.style.transform=""}const de={};for(const e of ie.options)de[e.value]=parseFloat(re.value);de["Cosmic Muons (μ)"]=5,ie.addEventListener("change",()=>{re.value=de[ie.value]||0}),re.addEventListener("input",()=>{de[ie.value]=parseFloat(re.value)});let _e=!1;oe.addEventListener("click",()=>{_e=!_e,oe.textContent=_e?"Resume":"Pause"}),le.addEventListener("click",()=>{I()}),fe.addEventListener("click",()=>{Re=!Re,fe.textContent=Re?"Density: On":"Density: Off",Re&&Y()}),ue.addEventListener("click",()=>{se.classList.toggle("open"),ce()}),window.addEventListener("resize",ce),ce();let be,Re=!1;function ve(e){const t=_.getAttribLocation(e,"a_pos");_.bindBuffer(_.ARRAY_BUFFER,E),_.enableVertexAttribArray(t),_.vertexAttribPointer(t,2,_.FLOAT,!1,0,0)}function Ae(e,t){const n=_.getAttribLocation(e,"a_pos"),r=_.getAttribLocation(e,"a_size"),a=_.getAttribLocation(e,"a_brightness"),i=_.getAttribLocation(e,"a_type"),o=_.getAttribLocation(e,"a_active");_.bindBuffer(_.ARRAY_BUFFER,t[0]),_.enableVertexAttribArray(n),_.vertexAttribPointer(n,3,_.FLOAT,!1,16,0),_.bindBuffer(_.ARRAY_BUFFER,t[1]),_.enableVertexAttribArray(i),_.vertexAttribPointer(i,1,_.FLOAT,!1,16,12),_.bindBuffer(_.ARRAY_BUFFER,t[2]),_.enableVertexAttribArray(r),_.vertexAttribPointer(r,1,_.FLOAT,!1,16,0),_.enableVertexAttribArray(a),_.vertexAttribPointer(a,1,_.FLOAT,!1,16,4),_.enableVertexAttribArray(o),_.vertexAttribPointer(o,1,_.FLOAT,!1,16,8)}be=b?function(e){const t=parseFloat(te.value),n=parseFloat(ne.value),r=parseFloat(re.value)*e;let a=Math.floor(r);Math.random()<r-a&&a++;const i=ie.value;for(let e=0;e<a;e++)if("Cosmic Muons (μ)"===i)Q(null);else{const e=u-2;Q([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}const o=.3+.8*n,f=.3+1.2*n;_.useProgram(h);const s=_.getAttribLocation(h,"a_state1"),c=_.getAttribLocation(h,"a_state2"),d=_.getAttribLocation(h,"a_state3");_.bindBuffer(_.ARRAY_BUFFER,j[0]),_.enableVertexAttribArray(s),_.vertexAttribPointer(s,4,_.FLOAT,!1,0,0),_.bindBuffer(_.ARRAY_BUFFER,j[1]),_.enableVertexAttribArray(c),_.vertexAttribPointer(c,4,_.FLOAT,!1,0,0),_.bindBuffer(_.ARRAY_BUFFER,j[2]),_.enableVertexAttribArray(d),_.vertexAttribPointer(d,4,_.FLOAT,!1,0,0),_.bindBufferBase(_.TRANSFORM_FEEDBACK_BUFFER,0,$[0]),_.bindBufferBase(_.TRANSFORM_FEEDBACK_BUFFER,1,$[1]),_.bindBufferBase(_.TRANSFORM_FEEDBACK_BUFFER,2,$[2]),_.uniform1f(_.getUniformLocation(h,"u_dt"),e),_.uniform1f(_.getUniformLocation(h,"u_bounds"),u),_.uniform1f(_.getUniformLocation(h,"u_dragBase"),o),_.uniform1f(_.getUniformLocation(h,"u_jitter"),f),_.uniform1f(_.getUniformLocation(h,"u_B"),t),_.enable(_.RASTERIZER_DISCARD),_.beginTransformFeedback(_.POINTS),_.drawArrays(_.POINTS,0,l),_.endTransformFeedback(),_.disable(_.RASTERIZER_DISCARD),_.bindBufferBase(_.TRANSFORM_FEEDBACK_BUFFER,0,null),_.bindBufferBase(_.TRANSFORM_FEEDBACK_BUFFER,1,null),_.bindBufferBase(_.TRANSFORM_FEEDBACK_BUFFER,2,null),_.disableVertexAttribArray(s),_.disableVertexAttribArray(c),_.disableVertexAttribArray(d);let b=j;j=$,$=b}:function(e){const t=parseFloat(te.value),n=parseFloat(ne.value),r=parseFloat(re.value)*e;let a=Math.floor(r);Math.random()<r-a&&a++;const i=ie.value;for(let e=0;e<a;e++)if("Cosmic Muons (μ)"===i)Q(null);else{const e=u-2;Q([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}const o=.3+.8*n,f=.3+1.2*n;function s(e){const t=43758.5453123*Math.sin(e);return t-Math.floor(t)}for(let n=0;n<l;n++){const r=4*n;let a=H[r],i=H[r+1],l=H[r+2],c=H[r+3],d=K[r],_=K[r+1],b=K[r+2],R=K[r+3],v=Z[r],A=Z[r+1],m=Z[r+2],F=Z[r+3];if(m>.5){const r=(R>.5?.6:1)*F,v=r*(-d*t);d+=r*(b*t)*e,b+=v*e;const h=Math.exp(-o*e);d*=h,_*=h,b*=h;const E=n;d+=(2*s(12.9898*E)-1)*f*e,_+=(2*s(78.233*E)-1)*f*e*.5,b+=(2*s(37.719*E)-1)*f*e,a+=d*e,i+=_*e,l+=b*e,c-=e,m=c>0&&Math.abs(a)<u&&Math.abs(i)<u&&Math.abs(l)<u?1:0,A*=Math.max(.25,.15*c)}H[r]=a,H[r+1]=i,H[r+2]=l,H[r+3]=c,K[r]=d,K[r+1]=_,K[r+2]=b,K[r+3]=R,Z[r]=v,Z[r+1]=A,Z[r+2]=m,Z[r+3]=F}_.bindBuffer(_.ARRAY_BUFFER,j[0]),_.bufferSubData(_.ARRAY_BUFFER,0,H),_.bindBuffer(_.ARRAY_BUFFER,j[1]),_.bufferSubData(_.ARRAY_BUFFER,0,K),_.bindBuffer(_.ARRAY_BUFFER,j[2]),_.bufferSubData(_.ARRAY_BUFFER,0,Z)};let me=performance.now();requestAnimationFrame(function e(t){const n=Math.min(f,(t-me)/1e3);me=t,_e||be(n);const r=parseFloat(ae.value);!function(e,t,n){_.bindFramebuffer(_.FRAMEBUFFER,e),_.viewport(0,0,S,D),_.disable(_.BLEND),_.useProgram(v),ve(v),_.activeTexture(_.TEXTURE0),_.bindTexture(_.TEXTURE_2D,t),_.uniform1i(_.getUniformLocation(v,"u_prev"),0),_.uniform1f(_.getUniformLocation(v,"u_decay"),n),_.uniform2f(_.getUniformLocation(v,"u_texel"),1/S,1/D),_.drawArrays(_.TRIANGLE_STRIP,0,4),_.enable(_.BLEND),_.blendFunc(_.SRC_ALPHA,_.ONE),_.useProgram(A),Ae(A,j),_.uniformMatrix4fv(_.getUniformLocation(A,"u_viewProj"),!1,k()),_.uniform1f(_.getUniformLocation(A,"u_dpr"),P),_.drawArrays(_.POINTS,0,l),_.bindFramebuffer(_.FRAMEBUFFER,null)}(y,T,r),Re&&function(e,t,n){_.bindFramebuffer(_.FRAMEBUFFER,e),_.viewport(0,0,s,s),_.disable(_.BLEND),_.useProgram(v),ve(v),_.activeTexture(_.TEXTURE0),_.bindTexture(_.TEXTURE_2D,t),_.uniform1i(_.getUniformLocation(v,"u_prev"),0),_.uniform1f(_.getUniformLocation(v,"u_decay"),n),_.uniform2f(_.getUniformLocation(v,"u_texel"),.00390625,.00390625),_.drawArrays(_.TRIANGLE_STRIP,0,4),_.enable(_.BLEND),_.blendFunc(_.SRC_ALPHA,_.ONE),_.useProgram(m),Ae(m,j),_.uniform1f(_.getUniformLocation(m,"u_bounds"),u),_.uniform1f(_.getUniformLocation(m,"u_dpr"),P),_.drawArrays(_.POINTS,0,l),_.bindFramebuffer(_.FRAMEBUFFER,null)}(w,U,r),function(e){_.disable(_.DEPTH_TEST),_.viewport(0,0,S,D),_.disable(_.BLEND),_.useProgram(R),ve(R),_.activeTexture(_.TEXTURE0),_.bindTexture(_.TEXTURE_2D,e),_.uniform1i(_.getUniformLocation(R,"u_tex"),0),_.drawArrays(_.TRIANGLE_STRIP,0,4),_.useProgram(F);const t=_.getAttribLocation(F,"a_pos");if(_.bindBuffer(_.ARRAY_BUFFER,g),_.enableVertexAttribArray(t),_.vertexAttribPointer(t,3,_.FLOAT,!1,0,0),_.uniformMatrix4fv(_.getUniformLocation(F,"u_viewProj"),!1,k()),_.uniform3f(_.getUniformLocation(F,"u_color"),.9,.95,1),_.drawArrays(_.LINES,0,24),Re){const e=Math.floor(.3*Math.min(S,D));_.viewport(10,10,e,e),_.disable(_.BLEND),_.useProgram(R),ve(R),_.activeTexture(_.TEXTURE0),_.bindTexture(_.TEXTURE_2D,M),_.uniform1i(_.getUniformLocation(R,"u_tex"),0),_.drawArrays(_.TRIANGLE_STRIP,0,4),_.viewport(0,0,S,D)}}(B);let a=B;B=T,T=a;let i=y;y=x,x=i,Re&&(a=M,M=U,U=a,i=w,w=L,L=i),requestAnimationFrame(e)});for(let e=0;e<48;e++){const e=u-2;Q([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}I()})();