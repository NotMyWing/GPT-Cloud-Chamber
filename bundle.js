(()=>{"use strict";function e(e,t,n){const r=e.createShader(t);if(e.shaderSource(r,n),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS)){const t=e.getShaderInfoLog(r);throw e.deleteShader(r),new Error("Shader compile error: "+t+"\n"+n)}return r}function t(t,n,r,a={},i=null){const o=e(t,t.VERTEX_SHADER,n),l=e(t,t.FRAGMENT_SHADER,r),f=t.createProgram();t.attachShader(f,o),t.attachShader(f,l);for(const[e,n]of Object.entries(a))t.bindAttribLocation(f,n,e);if(i&&t.transformFeedbackVaryings(f,i,t.SEPARATE_ATTRIBS),t.linkProgram(f),!t.getProgramParameter(f,t.LINK_STATUS)){const e=t.getProgramInfoLog(f);throw t.deleteProgram(f),new Error("Program link error: "+e)}return f}function n(e,t,n){const r=e.createTexture();return e.bindTexture(e.TEXTURE_2D,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t,n,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindTexture(e.TEXTURE_2D,null),r}function r(e,t){const n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;if(e.bindFramebuffer(e.FRAMEBUFFER,null),!r)throw new Error("Framebuffer incomplete");return n}const a="attribute vec2 a_pos;\nvarying vec2 v_uv;\nvoid main(){ v_uv = a_pos*0.5 + 0.5; gl_Position = vec4(a_pos,0.0,1.0); }\n",i="precision highp float;\nvarying float v_bright;\nvarying float v_type;\n\nfloat hash(float n){ return fract(sin(n) * 43758.5453123); }\nfloat noise(vec2 p){ return hash(p.x * 12.9898 + p.y * 78.233); }\n\nvoid main(){\n  vec2 p = gl_PointCoord * 2.0 - 1.0;\n  float r = length(p);\n  float density = exp(-2.5 * r * r);\n  float n = noise(p + v_bright);\n  density *= mix(0.7, 1.3, n);\n  float core = mix(0.9, 1.3, v_type);\n  float glow = mix(0.6, 1.0, v_type);\n  vec3 col = vec3(1.0) * (v_bright * core * density);\n  float alpha = density * glow;\n  gl_FragColor = vec4(col, alpha);\n}\n",o={perspective(e,t,n,r,a){const i=1/Math.tan(.5*t),o=1/(r-a);return e[0]=i/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(a+r)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*a*r*o,e[15]=0,e},lookAt(e,t,n,r){let a=t[0]-n[0],i=t[1]-n[1],o=t[2]-n[2],l=1/Math.hypot(a,i,o);a*=l,i*=l,o*=l;let f=r[1]*o-r[2]*i,u=r[2]*a-r[0]*o,c=r[0]*i-r[1]*a;l=1/Math.hypot(f,u,c),f*=l,u*=l,c*=l;let s=i*c-o*u,_=o*f-a*c,d=a*u-i*f;return e[0]=f,e[1]=s,e[2]=a,e[3]=0,e[4]=u,e[5]=_,e[6]=i,e[7]=0,e[8]=c,e[9]=d,e[10]=o,e[11]=0,e[12]=-(f*t[0]+u*t[1]+c*t[2]),e[13]=-(s*t[0]+_*t[1]+d*t[2]),e[14]=-(a*t[0]+i*t[1]+o*t[2]),e[15]=1,e},multiply(e,t,n){const r=t[0],a=t[1],i=t[2],o=t[3],l=t[4],f=t[5],u=t[6],c=t[7],s=t[8],_=t[9],d=t[10],v=t[11],b=t[12],m=t[13],A=t[14],E=t[15],R=n[0],F=n[1],h=n[2],g=n[3],p=n[4],B=n[5],T=n[6],y=n[7],x=n[8],M=n[9],U=n[10],L=n[11],w=n[12],P=n[13],S=n[14],D=n[15];return e[0]=r*R+l*F+s*h+b*g,e[1]=a*R+f*F+_*h+m*g,e[2]=i*R+u*F+d*h+A*g,e[3]=o*R+c*F+v*h+E*g,e[4]=r*p+l*B+s*T+b*y,e[5]=a*p+f*B+_*T+m*y,e[6]=i*p+u*B+d*T+A*y,e[7]=o*p+c*B+v*T+E*y,e[8]=r*x+l*M+s*U+b*L,e[9]=a*x+f*M+_*U+m*L,e[10]=i*x+u*M+d*U+A*L,e[11]=o*x+c*M+v*U+E*L,e[12]=r*w+l*P+s*S+b*D,e[13]=a*w+f*P+_*S+m*D,e[14]=i*w+u*P+d*S+A*D,e[15]=o*w+c*P+v*S+E*D,e}},l=5e4,f=1/30,u=20,c=256,s={"Ambient (α+β)":{mix:[{type:"alpha",frac:.3,speed:2.2,life:3.5,size:26,bright:1.05,qScale:1},{type:"beta",frac:.7,speed:7,life:7,size:10,bright:.65,qScale:1}]},"Am-241 (α)":{mix:[{type:"alpha",frac:1,speed:2.1,life:3.8,size:28,bright:1.15,qScale:.8}]},"Po-210 (α)":{mix:[{type:"alpha",frac:1,speed:2,life:3.4,size:28,bright:1.2,qScale:.8}]},"Rn-222 (α)":{mix:[{type:"alpha",frac:1,speed:2,life:3.2,size:26,bright:1.1,qScale:.85}]},"Sr-90 (β−)":{mix:[{type:"beta",frac:1,speed:6.5,life:7.5,size:9,bright:.6,qScale:1.2}]},"Cs-137 (β−)":{mix:[{type:"beta",frac:1,speed:7.5,life:8,size:10,bright:.62,qScale:1.2}]},"Co-60 (β−)":{mix:[{type:"beta",frac:1,speed:5.5,life:6.8,size:9,bright:.6,qScale:1.1}]},"Th-232 chain (α+β)":{mix:[{type:"alpha",frac:.6,speed:2,life:3.5,size:27,bright:1.1,qScale:.85},{type:"beta",frac:.4,speed:6.8,life:7.5,size:10,bright:.62,qScale:1.15}]},"Cosmic Muons (μ)":{cosmic:!0}},_=document.createElement("canvas");document.getElementById("app").appendChild(_);const d=function(e){const t=e.getContext("webgl2",{alpha:!1,antialias:!0,preserveDrawingBuffer:!1});if(!t)throw new Error("WebGL2 not supported");return t}(_),v=t(d,a,"precision highp float;\nvarying vec2 v_uv;\nuniform sampler2D u_tex;\nvoid main(){ gl_FragColor = texture2D(u_tex, v_uv); }\n"),b=t(d,a,"precision highp float;\nvarying vec2 v_uv;\nuniform sampler2D u_prev;\nuniform float u_decay;\nuniform vec2 u_texel;\nvoid main(){\n  vec4 col = texture2D(u_prev, v_uv) * 0.4;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(1.0, 0.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(-1.0, 0.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(0.0, 1.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(0.0, -1.0)) * 0.15;\n  gl_FragColor = vec4(col.rgb * u_decay, 1.0);\n}\n"),m=t(d,"precision highp float;\nattribute vec3 a_pos;\nattribute float a_size;\nattribute float a_brightness;\nattribute float a_type; // 0=beta,1=alpha\nattribute float a_active;\nuniform mat4 u_viewProj;\nvarying float v_bright;\nvarying float v_type;\nvoid main(){\n  v_bright = a_brightness;\n  v_type = a_type;\n  // Cull inactive particles by moving them off-screen and giving them a size\n  // of zero. This allows us to draw a fixed number of vertices every frame\n  // without updating an index buffer.\n  if (a_active < 0.5) {\n    gl_Position = vec4(2.0, 2.0, 2.0, 1.0);\n    gl_PointSize = 0.0;\n    return;\n  }\n  vec4 clip = u_viewProj * vec4(a_pos, 1.0);\n  gl_Position = clip;\n  float size = a_size / max(0.1, clip.w);\n  gl_PointSize = size;\n}\n",i),A=t(d,"precision highp float;\nattribute vec3 a_pos;\nattribute float a_size;\nattribute float a_brightness;\nattribute float a_type;\nattribute float a_active;\nuniform float u_bounds;\nvarying float v_bright;\nvarying float v_type;\nvoid main(){\n  v_bright = a_brightness;\n  v_type = a_type;\n  if (a_active < 0.5) {\n    gl_Position = vec4(2.0, 2.0, 0.0, 1.0);\n    gl_PointSize = 0.0;\n    return;\n  }\n  gl_Position = vec4(a_pos.x/u_bounds, a_pos.z/u_bounds, 0.0, 1.0);\n  gl_PointSize = a_size;\n}\n",i),E=t(d,"attribute vec3 a_pos;\nuniform mat4 u_viewProj;\nvoid main(){ gl_Position = u_viewProj * vec4(a_pos, 1.0); }\n","precision highp float;\nuniform vec3 u_color;\nvoid main(){ gl_FragColor = vec4(u_color, 1.0); }\n"),R=t(d,"#version 300 es\nprecision highp float;\n\nin vec4 a_state1; // xyz, life\nin vec4 a_state2; // vx vy vz type\nin vec4 a_state3; // size, bright, active, qScale\n\nuniform float u_dt;\nuniform float u_bounds;\nuniform float u_dragBase;\nuniform float u_jitter;\nuniform float u_B;\n\nout vec4 v_state1;\nout vec4 v_state2;\nout vec4 v_state3;\n\nfloat rand(float seed) {\n  return fract(sin(seed) * 43758.5453123);\n}\n\nvoid main() {\n  vec3 pos = a_state1.xyz;\n  float life = a_state1.w;\n  vec3 vel = a_state2.xyz;\n  float type = a_state2.w;\n  float size = a_state3.x;\n  float bright = a_state3.y;\n  float bActive = a_state3.z;\n  float qScale = a_state3.w;\n\n  if (bActive > 0.5) {\n    float qBase = type > 0.5 ? 0.6 : 1.0;\n    float q = qBase * qScale;\n    vec3 Bvec = vec3(0.0, u_B, 0.0);\n    vec3 acc = q * cross(vel, Bvec);\n    vel += acc * u_dt;\n    float drag = exp(-u_dragBase * u_dt);\n    vel *= drag;\n    float seed = float(gl_VertexID);\n    vel += vec3(\n      (rand(seed * 12.9898) * 2.0 - 1.0) * u_jitter * u_dt,\n      (rand(seed * 78.233) * 2.0 - 1.0) * u_jitter * u_dt * 0.5,\n      (rand(seed * 37.719) * 2.0 - 1.0) * u_jitter * u_dt\n    );\n    pos += vel * u_dt;\n    life -= u_dt;\n    bActive = (life > 0.0 && all(lessThan(abs(pos), vec3(u_bounds)))) ? 1.0 : 0.0;\n    bright = bright * max(0.25, life * 0.15);\n  }\n\n  v_state1 = vec4(pos, life);\n  v_state2 = vec4(vel, type);\n  v_state3 = vec4(size, bright, bActive, qScale);\n}\n","#version 300 es\nprecision highp float;\nvoid main(){}\n",{},["v_state1","v_state2","v_state3"]),F=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,F),d.bufferData(d.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),d.STATIC_DRAW);const h=d.createBuffer(),g=[[-u,-u,-u],[u,-u,-u],[u,-u,-u],[u,-u,u],[u,-u,u],[-u,-u,u],[-u,-u,u],[-u,-u,-u],[-u,u,-u],[u,u,-u],[u,u,-u],[u,u,u],[u,u,u],[-u,u,u],[-u,u,u],[-u,u,-u],[-u,-u,-u],[-u,u,-u],[u,-u,-u],[u,u,-u],[u,-u,u],[u,u,u],[-u,-u,u],[-u,u,u]].flat();d.bindBuffer(d.ARRAY_BUFFER,h),d.bufferData(d.ARRAY_BUFFER,new Float32Array(g),d.STATIC_DRAW);let p,B,T,y,x,M,U,L,w=2,P=2;function S(){d.disable(d.BLEND),d.bindFramebuffer(d.FRAMEBUFFER,T),d.clearColor(0,0,0,1),d.clear(d.COLOR_BUFFER_BIT),d.bindFramebuffer(d.FRAMEBUFFER,y),d.clearColor(0,0,0,1),d.clear(d.COLOR_BUFFER_BIT),U&&D(),d.bindFramebuffer(d.FRAMEBUFFER,null)}function D(){d.disable(d.BLEND),d.bindFramebuffer(d.FRAMEBUFFER,U),d.clearColor(0,0,0,1),d.clear(d.COLOR_BUFFER_BIT),d.bindFramebuffer(d.FRAMEBUFFER,L),d.clearColor(0,0,0,1),d.clear(d.COLOR_BUFFER_BIT),d.bindFramebuffer(d.FRAMEBUFFER,null)}function I(){const e=Math.min(2,window.devicePixelRatio||1),t=Math.max(2,Math.floor(window.innerWidth*e)),a=Math.max(2,Math.floor(window.innerHeight*e));t===w&&a===P||(w=t,P=a,_.width=t,_.height=a,_.style.width="100%",_.style.height="100%",d.viewport(0,0,t,a),function(e,t){p&&d.deleteTexture(p),B&&d.deleteTexture(B),T&&d.deleteFramebuffer(T),y&&d.deleteFramebuffer(y),p=n(d,e,t),B=n(d,e,t),T=r(d,p),y=r(d,B),S()}(t,a))}window.addEventListener("resize",I),I(),x&&d.deleteTexture(x),M&&d.deleteTexture(M),U&&d.deleteFramebuffer(U),L&&d.deleteFramebuffer(L),x=n(d,c,c),M=n(d,c,c),U=r(d,x),L=r(d,M),D();let C=.6,O=.2,z=14,N=!1,Y=0,X=0;function q(){const e=[z*Math.cos(O)*Math.cos(C),z*Math.sin(O),z*Math.cos(O)*Math.sin(C)],t=new Float32Array(16),n=new Float32Array(16),r=new Float32Array(16);o.lookAt(t,e,[0,0,0],[0,1,0]);const a=60*Math.PI/180;return o.perspective(n,a,w/P,.1,400),o.multiply(r,n,t),r}_.addEventListener("mousedown",e=>{N=!0,Y=e.clientX,X=e.clientY}),window.addEventListener("mouseup",()=>N=!1),window.addEventListener("mousemove",e=>{if(!N)return;const t=(e.clientX-Y)/window.innerWidth,n=(e.clientY-X)/window.innerHeight;C+=3*t,O=Math.max(-1.2,Math.min(1.2,O+3*n)),Y=e.clientX,X=e.clientY}),window.addEventListener("wheel",e=>{z=Math.max(4,Math.min(40,z+Math.sign(e.deltaY)))});const V=[d.createBuffer(),d.createBuffer(),d.createBuffer()],j=[d.createBuffer(),d.createBuffer(),d.createBuffer()];for(const e of[...V,...j])d.bindBuffer(d.ARRAY_BUFFER,e),d.bufferData(d.ARRAY_BUFFER,new Float32Array(2e5),d.DYNAMIC_COPY);let k=V,G=j,H=0;function W(e){const t=ee.value,n=s[t]||s["Ambient (α+β)"];if(n.cosmic){const e=18,t=(2*Math.random()-1)*e,n=(2*Math.random()-1)*e,r=22,a=[.1*Math.random()-.05,-1,.1*Math.random()-.05],i=30,o=50;return void K(t,r,n,a[0]*i,a[1]*i,a[2]*i,o,0,8,.5,.05)}const r=function(e){const t=Math.random();let n=0;for(const r of e)if(n+=r.frac,t<=n)return r;return e[e.length-1]}(n.mix),a=function(){const e=2*Math.random()-1,t=Math.random()*Math.PI*2,n=Math.sqrt(Math.max(0,1-e*e));return[n*Math.cos(t),n*Math.sin(t),e]}(),i=r.speed*(.85+.3*Math.random()),o=r.life*(.9+.3*Math.random()),l="alpha"===r.type?1:0;K(e[0],e[1],e[2],a[0]*i,a[1]*i,a[2]*i,o,l,r.size,r.bright,r.qScale)}function K(e,t,n,r,a,i,o,f,u,c,s){const _=H;H=(H+1)%l,d.bindBuffer(d.ARRAY_BUFFER,k[0]),d.bufferSubData(d.ARRAY_BUFFER,16*_,new Float32Array([e,t,n,o])),d.bindBuffer(d.ARRAY_BUFFER,k[1]),d.bufferSubData(d.ARRAY_BUFFER,16*_,new Float32Array([r,a,i,f])),d.bindBuffer(d.ARRAY_BUFFER,k[2]),d.bufferSubData(d.ARRAY_BUFFER,16*_,new Float32Array([u,c,1,s||1]))}_.addEventListener("click",e=>{W(function(e,t){const n=C,r=O,a=z,i=[a*Math.cos(r)*Math.cos(n),a*Math.sin(r),a*Math.cos(r)*Math.sin(n)],o=e/window.innerWidth*2-1,l=1-t/window.innerHeight*2,f=[-i[0],-i[1],-i[2]],u=Math.hypot(f[0],f[1],f[2]);f[0]/=u,f[1]/=u,f[2]/=u;let c=[f[2],0,-f[0]],s=Math.hypot(c[0],c[1],c[2]);c=[c[0]/s,c[1]/s,c[2]/s];let _=[c[1]*f[2]-c[2]*f[1],c[2]*f[0]-c[0]*f[2],c[0]*f[1]-c[1]*f[0]];const d=60*Math.PI/180,v=window.innerWidth/window.innerHeight,b=Math.tan(d/2),m=[f[0]+o*v*b*c[0]+l*b*_[0],f[1]+o*v*b*c[1]+l*b*_[1],f[2]+o*v*b*c[2]+l*b*_[2]],A=-i[1]/(m[1]||1e-6);return[i[0]+m[0]*A,0,i[2]+m[2]*A]}(e.clientX,e.clientY))});const Z=document.getElementById("bRange"),J=document.getElementById("vRange"),Q=document.getElementById("rRange"),$=document.getElementById("trailRange"),ee=document.getElementById("isoSelect"),te=document.getElementById("toggleBtn"),ne=document.getElementById("clearBtn"),re=document.getElementById("densityBtn"),ae={};for(const e of ee.options)ae[e.value]=parseFloat(Q.value);ae["Cosmic Muons (μ)"]=5,ee.addEventListener("change",()=>{Q.value=ae[ee.value]||0}),Q.addEventListener("input",()=>{ae[ee.value]=parseFloat(Q.value)});let ie=!1;te.addEventListener("click",()=>{ie=!ie,te.textContent=ie?"Resume":"Pause"}),ne.addEventListener("click",()=>{S()}),re.addEventListener("click",()=>{oe=!oe,re.textContent=oe?"Density: On":"Density: Off",oe&&D()});let oe=!1;function le(e){const t=d.getAttribLocation(e,"a_pos");d.bindBuffer(d.ARRAY_BUFFER,F),d.enableVertexAttribArray(t),d.vertexAttribPointer(t,2,d.FLOAT,!1,0,0)}function fe(e,t){const n=d.getAttribLocation(e,"a_pos"),r=d.getAttribLocation(e,"a_size"),a=d.getAttribLocation(e,"a_brightness"),i=d.getAttribLocation(e,"a_type"),o=d.getAttribLocation(e,"a_active");d.bindBuffer(d.ARRAY_BUFFER,t[0]),d.enableVertexAttribArray(n),d.vertexAttribPointer(n,3,d.FLOAT,!1,16,0),d.bindBuffer(d.ARRAY_BUFFER,t[1]),d.enableVertexAttribArray(i),d.vertexAttribPointer(i,1,d.FLOAT,!1,16,12),d.bindBuffer(d.ARRAY_BUFFER,t[2]),d.enableVertexAttribArray(r),d.vertexAttribPointer(r,1,d.FLOAT,!1,16,0),d.enableVertexAttribArray(a),d.vertexAttribPointer(a,1,d.FLOAT,!1,16,4),d.enableVertexAttribArray(o),d.vertexAttribPointer(o,1,d.FLOAT,!1,16,8)}let ue=performance.now();requestAnimationFrame(function e(t){const n=Math.min(f,(t-ue)/1e3);ue=t,ie||function(e){const t=parseFloat(Z.value),n=parseFloat(J.value),r=parseFloat(Q.value)*e;let a=Math.floor(r);Math.random()<r-a&&a++;const i=ee.value;for(let e=0;e<a;e++)if("Cosmic Muons (μ)"===i)W(null);else{const e=18;W([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}const o=.3+.8*n,f=.3+1.2*n;d.useProgram(R);const c=d.getAttribLocation(R,"a_state1"),s=d.getAttribLocation(R,"a_state2"),_=d.getAttribLocation(R,"a_state3");d.bindBuffer(d.ARRAY_BUFFER,k[0]),d.enableVertexAttribArray(c),d.vertexAttribPointer(c,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,k[1]),d.enableVertexAttribArray(s),d.vertexAttribPointer(s,4,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,k[2]),d.enableVertexAttribArray(_),d.vertexAttribPointer(_,4,d.FLOAT,!1,0,0),d.bindBufferBase(d.TRANSFORM_FEEDBACK_BUFFER,0,G[0]),d.bindBufferBase(d.TRANSFORM_FEEDBACK_BUFFER,1,G[1]),d.bindBufferBase(d.TRANSFORM_FEEDBACK_BUFFER,2,G[2]),d.uniform1f(d.getUniformLocation(R,"u_dt"),e),d.uniform1f(d.getUniformLocation(R,"u_bounds"),u),d.uniform1f(d.getUniformLocation(R,"u_dragBase"),o),d.uniform1f(d.getUniformLocation(R,"u_jitter"),f),d.uniform1f(d.getUniformLocation(R,"u_B"),t),d.enable(d.RASTERIZER_DISCARD),d.beginTransformFeedback(d.POINTS),d.drawArrays(d.POINTS,0,l),d.endTransformFeedback(),d.disable(d.RASTERIZER_DISCARD),d.bindBufferBase(d.TRANSFORM_FEEDBACK_BUFFER,0,null),d.bindBufferBase(d.TRANSFORM_FEEDBACK_BUFFER,1,null),d.bindBufferBase(d.TRANSFORM_FEEDBACK_BUFFER,2,null),d.disableVertexAttribArray(c),d.disableVertexAttribArray(s),d.disableVertexAttribArray(_);let v=k;k=G,G=v}(n);const r=parseFloat($.value);!function(e,t,n){d.bindFramebuffer(d.FRAMEBUFFER,e),d.viewport(0,0,w,P),d.disable(d.BLEND),d.useProgram(b),le(b),d.activeTexture(d.TEXTURE0),d.bindTexture(d.TEXTURE_2D,t),d.uniform1i(d.getUniformLocation(b,"u_prev"),0),d.uniform1f(d.getUniformLocation(b,"u_decay"),n),d.uniform2f(d.getUniformLocation(b,"u_texel"),1/w,1/P),d.drawArrays(d.TRIANGLE_STRIP,0,4),d.enable(d.BLEND),d.blendFunc(d.SRC_ALPHA,d.ONE),d.useProgram(m),fe(m,k),d.uniformMatrix4fv(d.getUniformLocation(m,"u_viewProj"),!1,q()),d.drawArrays(d.POINTS,0,l),d.bindFramebuffer(d.FRAMEBUFFER,null)}(T,B,r),oe&&function(e,t,n){d.bindFramebuffer(d.FRAMEBUFFER,e),d.viewport(0,0,c,c),d.disable(d.BLEND),d.useProgram(b),le(b),d.activeTexture(d.TEXTURE0),d.bindTexture(d.TEXTURE_2D,t),d.uniform1i(d.getUniformLocation(b,"u_prev"),0),d.uniform1f(d.getUniformLocation(b,"u_decay"),n),d.uniform2f(d.getUniformLocation(b,"u_texel"),.00390625,.00390625),d.drawArrays(d.TRIANGLE_STRIP,0,4),d.enable(d.BLEND),d.blendFunc(d.SRC_ALPHA,d.ONE),d.useProgram(A),fe(A,k),d.uniform1f(d.getUniformLocation(A,"u_bounds"),u),d.drawArrays(d.POINTS,0,l),d.bindFramebuffer(d.FRAMEBUFFER,null)}(U,M,r),function(e){d.disable(d.DEPTH_TEST),d.viewport(0,0,w,P),d.disable(d.BLEND),d.useProgram(v),le(v),d.activeTexture(d.TEXTURE0),d.bindTexture(d.TEXTURE_2D,e),d.uniform1i(d.getUniformLocation(v,"u_tex"),0),d.drawArrays(d.TRIANGLE_STRIP,0,4),d.useProgram(E);const t=d.getAttribLocation(E,"a_pos");if(d.bindBuffer(d.ARRAY_BUFFER,h),d.enableVertexAttribArray(t),d.vertexAttribPointer(t,3,d.FLOAT,!1,0,0),d.uniformMatrix4fv(d.getUniformLocation(E,"u_viewProj"),!1,q()),d.uniform3f(d.getUniformLocation(E,"u_color"),.9,.95,1),d.drawArrays(d.LINES,0,24),oe){const e=Math.floor(.3*Math.min(w,P));d.viewport(10,10,e,e),d.disable(d.BLEND),d.useProgram(v),le(v),d.activeTexture(d.TEXTURE0),d.bindTexture(d.TEXTURE_2D,x),d.uniform1i(d.getUniformLocation(v,"u_tex"),0),d.drawArrays(d.TRIANGLE_STRIP,0,4),d.viewport(0,0,w,P)}}(p);let a=p;p=B,B=a;let i=T;T=y,y=i,oe&&(a=x,x=M,M=a,i=U,U=L,L=i),requestAnimationFrame(e)});for(let e=0;e<48;e++){const e=u-2;W([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}S()})();