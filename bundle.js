(()=>{"use strict";function e(e,t,n){const a=e.createShader(t);if(e.shaderSource(a,n),e.compileShader(a),!e.getShaderParameter(a,e.COMPILE_STATUS)){const t=e.getShaderInfoLog(a);throw e.deleteShader(a),new Error("Shader compile error: "+t+"\n"+n)}return a}function t(t,n,a,r={},i=null){const o=e(t,t.VERTEX_SHADER,n),c=e(t,t.FRAGMENT_SHADER,a),l=t.createProgram();t.attachShader(l,o),t.attachShader(l,c);for(const[e,n]of Object.entries(r))t.bindAttribLocation(l,n,e);if(i&&t.transformFeedbackVaryings(l,i,t.SEPARATE_ATTRIBS),t.linkProgram(l),!t.getProgramParameter(l,t.LINK_STATUS)){const e=t.getProgramInfoLog(l);throw t.deleteProgram(l),new Error("Program link error: "+e)}return l}function n(e,t,n){const a=e.createTexture();return e.bindTexture(e.TEXTURE_2D,a),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t,n,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindTexture(e.TEXTURE_2D,null),a}function a(e,t){const n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;if(e.bindFramebuffer(e.FRAMEBUFFER,null),!a)throw new Error("Framebuffer incomplete");return n}const r="attribute vec2 a_pos;\nvarying vec2 v_uv;\nvoid main(){ v_uv = a_pos*0.5 + 0.5; gl_Position = vec4(a_pos,0.0,1.0); }\n",i="precision highp float;\nvarying float v_bright;\nvarying float v_type;\n\nfloat hash(float n){ return fract(sin(n) * 43758.5453123); }\nfloat noise(vec2 p){ return hash(p.x * 12.9898 + p.y * 78.233); }\n\nvoid main(){\n  vec2 p = gl_PointCoord * 2.0 - 1.0;\n  float r = length(p);\n  float density = exp(-2.5 * r * r);\n  float n = noise(p + v_bright);\n  density *= mix(0.7, 1.3, n);\n  float core = mix(0.9, 1.3, v_type);\n  float glow = mix(0.6, 1.0, v_type);\n  vec3 col = vec3(1.0) * (v_bright * core * density);\n  float alpha = density * glow;\n  gl_FragColor = vec4(col, alpha);\n}\n",o={perspective(e,t,n,a,r){const i=1/Math.tan(.5*t),o=1/(a-r);return e[0]=i/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(r+a)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*r*a*o,e[15]=0,e},lookAt(e,t,n,a){let r=t[0]-n[0],i=t[1]-n[1],o=t[2]-n[2],c=1/Math.hypot(r,i,o);r*=c,i*=c,o*=c;let l=a[1]*o-a[2]*i,s=a[2]*r-a[0]*o,f=a[0]*i-a[1]*r;c=1/Math.hypot(l,s,f),l*=c,s*=c,f*=c;let u=i*f-o*s,d=o*l-r*f,v=r*s-i*l;return e[0]=l,e[1]=u,e[2]=r,e[3]=0,e[4]=s,e[5]=d,e[6]=i,e[7]=0,e[8]=f,e[9]=v,e[10]=o,e[11]=0,e[12]=-(l*t[0]+s*t[1]+f*t[2]),e[13]=-(u*t[0]+d*t[1]+v*t[2]),e[14]=-(r*t[0]+i*t[1]+o*t[2]),e[15]=1,e},multiply(e,t,n){const a=t[0],r=t[1],i=t[2],o=t[3],c=t[4],l=t[5],s=t[6],f=t[7],u=t[8],d=t[9],v=t[10],_=t[11],m=t[12],b=t[13],A=t[14],h=t[15],R=n[0],F=n[1],E=n[2],p=n[3],g=n[4],B=n[5],y=n[6],T=n[7],x=n[8],L=n[9],M=n[10],U=n[11],w=n[12],P=n[13],S=n[14],D=n[15];return e[0]=a*R+c*F+u*E+m*p,e[1]=r*R+l*F+d*E+b*p,e[2]=i*R+s*F+v*E+A*p,e[3]=o*R+f*F+_*E+h*p,e[4]=a*g+c*B+u*y+m*T,e[5]=r*g+l*B+d*y+b*T,e[6]=i*g+s*B+v*y+A*T,e[7]=o*g+f*B+_*y+h*T,e[8]=a*x+c*L+u*M+m*U,e[9]=r*x+l*L+d*M+b*U,e[10]=i*x+s*L+v*M+A*U,e[11]=o*x+f*L+_*M+h*U,e[12]=a*w+c*P+u*S+m*D,e[13]=r*w+l*P+d*S+b*D,e[14]=i*w+s*P+v*S+A*D,e[15]=o*w+f*P+_*S+h*D,e}},c=JSON.parse('{"Ambient (α+β)":{"mix":[{"type":"alpha","frac":0.3,"speed":2.2,"life":3.5,"size":26,"bright":1.05,"qScale":1},{"type":"beta","frac":0.7,"speed":7,"life":7,"size":10,"bright":0.65,"qScale":1}]},"Am-241 (α)":{"mix":[{"type":"alpha","frac":1,"speed":2.1,"life":3.8,"size":28,"bright":1.15,"qScale":0.8}]},"Po-210 (α)":{"mix":[{"type":"alpha","frac":1,"speed":2,"life":3.4,"size":28,"bright":1.2,"qScale":0.8}]},"Rn-222 (α)":{"mix":[{"type":"alpha","frac":1,"speed":2,"life":3.2,"size":26,"bright":1.1,"qScale":0.85}]},"Sr-90 (β−)":{"mix":[{"type":"beta","frac":1,"speed":6.5,"life":7.5,"size":9,"bright":0.6,"qScale":1.2}]},"Cs-137 (β−)":{"mix":[{"type":"beta","frac":1,"speed":7.5,"life":8,"size":10,"bright":0.62,"qScale":1.2}]},"Co-60 (β−)":{"mix":[{"type":"beta","frac":1,"speed":5.5,"life":6.8,"size":9,"bright":0.6,"qScale":1.1}]},"Th-232 chain (α+β)":{"mix":[{"type":"alpha","frac":0.6,"speed":2,"life":3.5,"size":27,"bright":1.1,"qScale":0.85},{"type":"beta","frac":0.4,"speed":6.8,"life":7.5,"size":10,"bright":0.62,"qScale":1.15}]},"Cosmic Muons (μ)":{"cosmic":true}}');let l=3e4;const s=1/30,f=20,u=128,d=document.createElement("canvas");document.getElementById("app").appendChild(d);const v=function(e){let t=e.getContext("webgl2",{alpha:!1,antialias:!0,preserveDrawingBuffer:!1});if(t)return t;if(t=e.getContext("webgl",{alpha:!1,antialias:!0,preserveDrawingBuffer:!1})||e.getContext("experimental-webgl",{alpha:!1,antialias:!0,preserveDrawingBuffer:!1}),!t)throw new Error("WebGL not supported");return t}(d),_="undefined"!=typeof WebGL2RenderingContext&&v instanceof WebGL2RenderingContext;_||(l=1e4);const m=t(v,r,"precision highp float;\nvarying vec2 v_uv;\nuniform sampler2D u_tex;\nvoid main(){ gl_FragColor = texture2D(u_tex, v_uv); }\n"),b=t(v,r,"precision highp float;\nvarying vec2 v_uv;\nuniform sampler2D u_prev;\nuniform float u_decay;\nuniform vec2 u_texel;\nvoid main(){\n  vec4 col = texture2D(u_prev, v_uv) * 0.4;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(1.0, 0.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(-1.0, 0.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(0.0, 1.0)) * 0.15;\n  col += texture2D(u_prev, v_uv + u_texel * vec2(0.0, -1.0)) * 0.15;\n  gl_FragColor = vec4(col.rgb * u_decay, 1.0);\n}\n"),A=t(v,"precision highp float;\nattribute vec3 a_pos;\nattribute float a_size;\nattribute float a_brightness;\nattribute float a_type; // 0=beta,1=alpha\nattribute float a_active;\nuniform mat4 u_viewProj;\nuniform float u_dpr;\nvarying float v_bright;\nvarying float v_type;\nvoid main(){\n  v_bright = a_brightness;\n  v_type = a_type;\n  // Cull inactive particles by moving them off-screen and giving them a size\n  // of zero. This allows us to draw a fixed number of vertices every frame\n  // without updating an index buffer.\n  if (a_active < 0.5) {\n    gl_Position = vec4(2.0, 2.0, 2.0, 1.0);\n    gl_PointSize = 0.0;\n    return;\n  }\n  vec4 clip = u_viewProj * vec4(a_pos, 1.0);\n  gl_Position = clip;\n  float size = (a_size * u_dpr) / max(0.1, clip.w);\n  gl_PointSize = size;\n}\n",i),h=t(v,"precision highp float;\nattribute vec3 a_pos;\nattribute float a_size;\nattribute float a_brightness;\nattribute float a_type;\nattribute float a_active;\nuniform float u_bounds;\nuniform float u_dpr;\nvarying float v_bright;\nvarying float v_type;\nvoid main(){\n  v_bright = a_brightness;\n  v_type = a_type;\n  if (a_active < 0.5) {\n    gl_Position = vec4(2.0, 2.0, 0.0, 1.0);\n    gl_PointSize = 0.0;\n    return;\n  }\n  gl_Position = vec4(a_pos.x/u_bounds, a_pos.z/u_bounds, 0.0, 1.0);\n  gl_PointSize = a_size * u_dpr;\n}\n",i),R=t(v,"attribute vec3 a_pos;\nattribute vec3 a_norm;\nuniform mat4 u_viewProj;\nvarying vec3 v_norm;\nvarying vec3 v_pos;\nvoid main(){\n  v_norm = a_norm;\n  v_pos = a_pos;\n  gl_Position = u_viewProj * vec4(a_pos, 1.0);\n}\n","precision highp float;\nvarying vec3 v_norm;\nvarying vec3 v_pos;\nuniform vec3 u_eye;\nvoid main(){\n  vec3 N = normalize(v_norm);\n  vec3 V = normalize(u_eye - v_pos);\n  vec3 Nf = faceforward(N, V, N);\n  float fres = pow(1.0 - max(dot(V, Nf), 0.0), 5.0);\n  vec3 tint = vec3(0.4, 0.6, 0.7) * 0.15;\n  vec3 refl = vec3(0.1);\n  vec3 col = mix(tint, refl, fres);\n  float spec = pow(max(dot(reflect(-V, Nf), vec3(0.0,0.0,1.0)), 0.0), 16.0);\n  col += vec3(spec);\n  gl_FragColor = vec4(col, 0.15 + 0.15 * fres);\n}\n"),F=t(v,"attribute vec3 a_pos;\nuniform mat4 u_viewProj;\nvarying vec3 v_pos;\nvoid main(){\n  v_pos = a_pos;\n  gl_Position = u_viewProj * vec4(a_pos, 1.0);\n}\n","precision highp float;\nvarying vec3 v_pos;\nuniform float u_time;\n\nfloat hash(vec3 p){\n  return fract(sin(dot(p, vec3(127.1,311.7,74.7))) * 43758.5453123);\n}\n\nfloat noise(vec3 p){\n  vec3 i = floor(p);\n  vec3 f = fract(p);\n  float n000 = hash(i);\n  float n100 = hash(i + vec3(1.0,0.0,0.0));\n  float n010 = hash(i + vec3(0.0,1.0,0.0));\n  float n110 = hash(i + vec3(1.0,1.0,0.0));\n  float n001 = hash(i + vec3(0.0,0.0,1.0));\n  float n101 = hash(i + vec3(1.0,0.0,1.0));\n  float n011 = hash(i + vec3(0.0,1.0,1.0));\n  float n111 = hash(i + vec3(1.0,1.0,1.0));\n  vec3 u = f*f*(3.0-2.0*f);\n  return mix(mix(mix(n000,n100,u.x), mix(n010,n110,u.x), u.y),\n             mix(mix(n001,n101,u.x), mix(n011,n111,u.x), u.y), u.z);\n}\n\nfloat fbm(vec3 p){\n  float v = 0.0;\n  float a = 0.5;\n  for(int i=0;i<4;i++){\n    v += a * noise(p);\n    p *= 2.0;\n    a *= 0.5;\n  }\n  return v;\n}\n\nvoid main(){\n  vec3 p = v_pos * 0.1 + vec3(0.0, u_time * 0.02, 0.0);\n  float d = fbm(p);\n  float alpha = smoothstep(0.6, 0.9, d) * 0.025;\n  gl_FragColor = vec4(vec3(1.0), alpha);\n}\n"),E=t(v,"attribute vec3 a_pos;\nuniform mat4 u_viewProj;\nvoid main(){\n  gl_Position = u_viewProj * vec4(a_pos,1.0);\n}\n","precision highp float;\nuniform vec3 u_color;\nvoid main(){\n  gl_FragColor = vec4(u_color,1.0);\n}\n");let p=null;_&&(p=t(v,"#version 300 es\nprecision highp float;\n\nin vec4 a_state1; // xyz, life\nin vec4 a_state2; // vx vy vz type\nin vec4 a_state3; // size, bright, active, qScale\n\nuniform float u_dt;\nuniform float u_bounds;\nuniform float u_dragBase;\nuniform float u_jitter;\nuniform float u_B;\n\nout vec4 v_state1;\nout vec4 v_state2;\nout vec4 v_state3;\n\nfloat rand(float seed) {\n  return fract(sin(seed) * 43758.5453123);\n}\n\nvoid main() {\n  vec3 pos = a_state1.xyz;\n  float life = a_state1.w;\n  vec3 vel = a_state2.xyz;\n  float type = a_state2.w;\n  float size = a_state3.x;\n  float bright = a_state3.y;\n  float bActive = a_state3.z;\n  float qScale = a_state3.w;\n\n  if (bActive > 0.5) {\n    float qBase = type > 0.5 ? 0.6 : 1.0;\n    float q = qBase * qScale;\n    vec3 Bvec = vec3(0.0, u_B, 0.0);\n    vec3 acc = q * cross(vel, Bvec);\n    vel += acc * u_dt;\n    float drag = exp(-u_dragBase * u_dt);\n    vel *= drag;\n    float seed = float(gl_VertexID);\n    vel += vec3(\n      (rand(seed * 12.9898) * 2.0 - 1.0) * u_jitter * u_dt,\n      (rand(seed * 78.233) * 2.0 - 1.0) * u_jitter * u_dt * 0.5,\n      (rand(seed * 37.719) * 2.0 - 1.0) * u_jitter * u_dt\n    );\n    pos += vel * u_dt;\n    life -= u_dt;\n    bActive = (life > 0.0 && all(lessThan(abs(pos), vec3(u_bounds)))) ? 1.0 : 0.0;\n    bright = bright * max(0.25, life * 0.15);\n  }\n\n  v_state1 = vec4(pos, life);\n  v_state2 = vec4(vel, type);\n  v_state3 = vec4(size, bright, bActive, qScale);\n}\n","#version 300 es\nprecision highp float;\nvoid main(){}\n",{},["v_state1","v_state2","v_state3"]));const g=v.createBuffer();v.bindBuffer(v.ARRAY_BUFFER,g),v.bufferData(v.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),v.STATIC_DRAW);const B=v.createBuffer(),y=f,T=[-y,-y,y,0,0,1,y,-y,y,0,0,1,y,y,y,0,0,1,-y,-y,y,0,0,1,y,y,y,0,0,1,-y,y,y,0,0,1,-y,-y,-y,0,0,-1,-y,y,-y,0,0,-1,y,y,-y,0,0,-1,-y,-y,-y,0,0,-1,y,y,-y,0,0,-1,y,-y,-y,0,0,-1,-y,-y,-y,-1,0,0,-y,-y,y,-1,0,0,-y,y,y,-1,0,0,-y,-y,-y,-1,0,0,-y,y,y,-1,0,0,-y,y,-y,-1,0,0,y,-y,-y,1,0,0,y,y,-y,1,0,0,y,y,y,1,0,0,y,-y,-y,1,0,0,y,y,y,1,0,0,y,-y,y,1,0,0,-y,y,-y,0,1,0,-y,y,y,0,1,0,y,y,y,0,1,0,-y,y,-y,0,1,0,y,y,y,0,1,0,y,y,-y,0,1,0,-y,-y,-y,0,-1,0,y,-y,-y,0,-1,0,y,-y,y,0,-1,0,-y,-y,-y,0,-1,0,y,-y,y,0,-1,0,-y,-y,y,0,-1,0];v.bindBuffer(v.ARRAY_BUFFER,B),v.bufferData(v.ARRAY_BUFFER,new Float32Array(T),v.STATIC_DRAW);const x=v.createBuffer(),L=[-y,-y,-y,y,-y,-y,y,-y,-y,y,-y,y,y,-y,y,-y,-y,y,-y,-y,y,-y,-y,-y,-y,y,-y,y,y,-y,y,y,-y,y,y,y,y,y,y,-y,y,y,-y,y,y,-y,y,-y,-y,-y,-y,-y,y,-y,y,-y,-y,y,y,-y,y,-y,y,y,y,y,-y,-y,y,-y,y,y];v.bindBuffer(v.ARRAY_BUFFER,x),v.bufferData(v.ARRAY_BUFFER,new Float32Array(L),v.STATIC_DRAW);const M=v.createBuffer();!function(){const e=[];for(let t=0;t<96;t++){const n=t/95*40-20;e.push(-y,-y,n,y,-y,n,y,y,n,-y,-y,n,y,y,n,-y,y,n)}v.bindBuffer(v.ARRAY_BUFFER,M),v.bufferData(v.ARRAY_BUFFER,new Float32Array(e),v.STATIC_DRAW)}();let U,w,P,S,D,I,C,Y,N=2,O=2,z=1,X=1,k=!0;try{const e=JSON.parse(localStorage.getItem("renderSettings"));e&&("number"==typeof e.scale&&(X=e.scale),"boolean"==typeof e.auto&&(k=e.auto))}catch(e){}function V(){v.disable(v.BLEND),v.bindFramebuffer(v.FRAMEBUFFER,P),v.clearColor(0,0,0,1),v.clear(v.COLOR_BUFFER_BIT),v.bindFramebuffer(v.FRAMEBUFFER,S),v.clearColor(0,0,0,1),v.clear(v.COLOR_BUFFER_BIT),C&&q(),v.bindFramebuffer(v.FRAMEBUFFER,null)}function q(){v.disable(v.BLEND),v.bindFramebuffer(v.FRAMEBUFFER,C),v.clearColor(0,0,0,1),v.clear(v.COLOR_BUFFER_BIT),v.bindFramebuffer(v.FRAMEBUFFER,Y),v.clearColor(0,0,0,1),v.clear(v.COLOR_BUFFER_BIT),v.bindFramebuffer(v.FRAMEBUFFER,null)}function j(){const e=Math.min(2,window.devicePixelRatio||1);z=Math.min(2,e*X);const t=Math.max(2,Math.floor(window.innerWidth*z)),r=Math.max(2,Math.floor(window.innerHeight*z));t===N&&r===O||(N=t,O=r,d.width=t,d.height=r,d.style.width="100%",d.style.height="100%",v.viewport(0,0,t,r),function(e,t){U&&v.deleteTexture(U),w&&v.deleteTexture(w),P&&v.deleteFramebuffer(P),S&&v.deleteFramebuffer(S),U=n(v,e,t),w=n(v,e,t),P=a(v,U),S=a(v,w),V()}(t,r))}window.addEventListener("resize",j),j(),D&&v.deleteTexture(D),I&&v.deleteTexture(I),C&&v.deleteFramebuffer(C),Y&&v.deleteFramebuffer(Y),D=n(v,u,u),I=n(v,u,u),C=a(v,D),Y=a(v,I),q();let W=1.2,G=.2,H=64,K=!1,J=0,Z=0,$=!1,Q=0,ee=!1;function te(){const e=ne(),t=new Float32Array(16),n=new Float32Array(16),a=new Float32Array(16);o.lookAt(t,e,[0,0,0],[0,1,0]);const r=60*Math.PI/180;return o.perspective(n,r,N/O,.1,400),o.multiply(a,n,t),a}function ne(){return[H*Math.cos(G)*Math.cos(W),H*Math.sin(G),H*Math.cos(G)*Math.sin(W)]}d.addEventListener("mousedown",e=>{K=!0,J=e.clientX,Z=e.clientY}),window.addEventListener("mouseup",()=>K=!1),window.addEventListener("mousemove",e=>{if(!K)return;const t=(e.clientX-J)/window.innerWidth,n=(e.clientY-Z)/window.innerHeight;W+=3*t,G=Math.max(-1.2,Math.min(1.2,G+3*n)),J=e.clientX,Z=e.clientY,ee=!0}),window.addEventListener("wheel",e=>{const t=1/H*100;H=Math.max(4,Math.min(100,H+Math.sign(e.deltaY)*t))}),d.addEventListener("touchstart",e=>{if(1===e.touches.length){K=!0;const t=e.touches[0];J=t.clientX,Z=t.clientY}else if(2===e.touches.length){$=!0;const t=e.touches[0].clientX-e.touches[1].clientX,n=e.touches[0].clientY-e.touches[1].clientY;Q=Math.hypot(t,n)}e.preventDefault()},{passive:!1}),window.addEventListener("touchend",e=>{0===e.touches.length&&(K=!1),e.touches.length<2&&($=!1)}),window.addEventListener("touchcancel",()=>{K=!1,$=!1}),window.addEventListener("touchmove",e=>{if($&&2===e.touches.length){const t=e.touches[0].clientX-e.touches[1].clientX,n=e.touches[0].clientY-e.touches[1].clientY,a=Math.hypot(t,n),r=a-Q,i=1/H*20;return H=Math.max(4,Math.min(100,H-r*i)),Q=a,void e.preventDefault()}if(K&&1===e.touches.length){const t=e.touches[0],n=(t.clientX-J)/window.innerWidth,a=(t.clientY-Z)/window.innerHeight;W+=3*n,G=Math.max(-1.2,Math.min(1.2,G+3*a)),J=t.clientX,Z=t.clientY,ee=!0,e.preventDefault()}},{passive:!1});let ae,re,ie,oe,ce=null,le=0;if(_){const e=[v.createBuffer(),v.createBuffer(),v.createBuffer()],t=[v.createBuffer(),v.createBuffer(),v.createBuffer()];for(const n of[...e,...t])v.bindBuffer(v.ARRAY_BUFFER,n),v.bufferData(v.ARRAY_BUFFER,new Float32Array(4*l),v.DYNAMIC_COPY);ae=e,ce=t}else{ae=[v.createBuffer(),v.createBuffer(),v.createBuffer()],re=new Float32Array(4*l),ie=new Float32Array(4*l),oe=new Float32Array(4*l);const e=[re,ie,oe];for(let t=0;t<3;t++)v.bindBuffer(v.ARRAY_BUFFER,ae[t]),v.bufferData(v.ARRAY_BUFFER,e[t],v.DYNAMIC_DRAW)}function se(e){const t=me.value,n=c[t]||c["Ambient (α+β)"];if(n.cosmic){const e=18,t=(2*Math.random()-1)*e,n=(2*Math.random()-1)*e,a=22,r=[.1*Math.random()-.05,-1,.1*Math.random()-.05],i=30,o=50;return void fe(t,a,n,r[0]*i,r[1]*i,r[2]*i,o,0,8,.5,.05)}const a=function(e){const t=Math.random();let n=0;for(const a of e)if(n+=a.frac,t<=n)return a;return e[e.length-1]}(n.mix),r=function(){const e=2*Math.random()-1,t=Math.random()*Math.PI*2,n=Math.sqrt(Math.max(0,1-e*e));return[n*Math.cos(t),n*Math.sin(t),e]}(),i=a.speed*(.85+.3*Math.random()),o=a.life*(.9+.3*Math.random()),l="alpha"===a.type?1:0;fe(e[0],e[1],e[2],r[0]*i,r[1]*i,r[2]*i,o,l,a.size,a.bright,a.qScale)}function fe(e,t,n,a,r,i,o,c,s,f,u){const d=le;if(le=(le+1)%l,_)v.bindBuffer(v.ARRAY_BUFFER,ae[0]),v.bufferSubData(v.ARRAY_BUFFER,16*d,new Float32Array([e,t,n,o])),v.bindBuffer(v.ARRAY_BUFFER,ae[1]),v.bufferSubData(v.ARRAY_BUFFER,16*d,new Float32Array([a,r,i,c])),v.bindBuffer(v.ARRAY_BUFFER,ae[2]),v.bufferSubData(v.ARRAY_BUFFER,16*d,new Float32Array([s,f,1,u||1]));else{const l=4*d;re.set([e,t,n,o],l),ie.set([a,r,i,c],l),oe.set([s,f,1,u||1],l),v.bindBuffer(v.ARRAY_BUFFER,ae[0]),v.bufferSubData(v.ARRAY_BUFFER,16*d,re.subarray(l,l+4)),v.bindBuffer(v.ARRAY_BUFFER,ae[1]),v.bufferSubData(v.ARRAY_BUFFER,16*d,ie.subarray(l,l+4)),v.bindBuffer(v.ARRAY_BUFFER,ae[2]),v.bufferSubData(v.ARRAY_BUFFER,16*d,oe.subarray(l,l+4))}}d.addEventListener("click",e=>{se(function(e,t){const n=W,a=G,r=H,i=[r*Math.cos(a)*Math.cos(n),r*Math.sin(a),r*Math.cos(a)*Math.sin(n)],o=e/window.innerWidth*2-1,c=1-t/window.innerHeight*2,l=[-i[0],-i[1],-i[2]],s=Math.hypot(l[0],l[1],l[2]);l[0]/=s,l[1]/=s,l[2]/=s;let f=[l[2],0,-l[0]],u=Math.hypot(f[0],f[1],f[2]);f=[f[0]/u,f[1]/u,f[2]/u];let d=[f[1]*l[2]-f[2]*l[1],f[2]*l[0]-f[0]*l[2],f[0]*l[1]-f[1]*l[0]];const v=60*Math.PI/180,_=window.innerWidth/window.innerHeight,m=Math.tan(v/2),b=[l[0]+o*_*m*f[0]+c*m*d[0],l[1]+o*_*m*f[1]+c*m*d[1],l[2]+o*_*m*f[2]+c*m*d[2]],A=-i[1]/(b[1]||1e-6);return[i[0]+b[0]*A,0,i[2]+b[2]*A]}(e.clientX,e.clientY))});const ue=document.getElementById("bRange"),de=document.getElementById("vRange"),ve=document.getElementById("rRange"),_e=document.getElementById("trailRange"),me=document.getElementById("isoSelect");for(const e of Object.keys(c)){const t=document.createElement("option");t.value=e,t.textContent=e,me.appendChild(t)}me.value="Ambient (α+β)";const be=document.getElementById("toggleBtn"),Ae=document.getElementById("clearBtn"),he=document.getElementById("densityBtn"),Re=document.getElementById("settingsBtn"),Fe=document.getElementById("settingsPanel"),Ee=document.getElementById("simTabBtn"),pe=document.getElementById("renderTabBtn"),ge=document.getElementById("simTab"),Be=document.getElementById("renderTab");Ee.addEventListener("click",()=>{Ee.classList.add("active"),pe.classList.remove("active"),ge.classList.add("active"),Be.classList.remove("active")}),pe.addEventListener("click",()=>{pe.classList.add("active"),Ee.classList.remove("active"),Be.classList.add("active"),ge.classList.remove("active")});const ye=document.getElementById("scaleRange"),Te=document.getElementById("autoCheck"),xe=document.getElementById("resetRenderBtn");function Le(){try{localStorage.setItem("renderSettings",JSON.stringify({scale:X,auto:k}))}catch(e){}}function Me(){if(Fe.classList.contains("open")){const e=Fe.offsetWidth;Re.style.transform=`translateX(${e}px)`}else Re.style.transform=""}ye.value=X,Te.checked=k,ye.disabled=k,ye.addEventListener("input",()=>{X=parseFloat(ye.value),j(),Le()}),Te.addEventListener("change",()=>{k=Te.checked,ye.disabled=k,Le()}),xe.addEventListener("click",()=>{X=1,k=!0,ye.value=X,Te.checked=k,ye.disabled=k,j(),Le()});const Ue={};for(const e of Object.keys(c))Ue[e]=parseFloat(ve.value);Ue["Cosmic Muons (μ)"]=5,me.addEventListener("change",()=>{ve.value=Ue[me.value]||0}),ve.addEventListener("input",()=>{Ue[me.value]=parseFloat(ve.value)});let we=!1;be.addEventListener("click",()=>{we=!we,be.textContent=we?"Resume":"Pause"}),Ae.addEventListener("click",()=>{V()}),he.addEventListener("click",()=>{Se=!Se,he.textContent=Se?"Density: On":"Density: Off",Se&&q()}),Re.addEventListener("click",()=>{Fe.classList.toggle("open"),Me()}),window.addEventListener("resize",Me),Me();let Pe,Se=!1;function De(e){const t=v.getAttribLocation(e,"a_pos");v.bindBuffer(v.ARRAY_BUFFER,g),v.enableVertexAttribArray(t),v.vertexAttribPointer(t,2,v.FLOAT,!1,0,0)}function Ie(e,t){const n=v.getAttribLocation(e,"a_pos"),a=v.getAttribLocation(e,"a_size"),r=v.getAttribLocation(e,"a_brightness"),i=v.getAttribLocation(e,"a_type"),o=v.getAttribLocation(e,"a_active");v.bindBuffer(v.ARRAY_BUFFER,t[0]),v.enableVertexAttribArray(n),v.vertexAttribPointer(n,3,v.FLOAT,!1,16,0),v.bindBuffer(v.ARRAY_BUFFER,t[1]),v.enableVertexAttribArray(i),v.vertexAttribPointer(i,1,v.FLOAT,!1,16,12),v.bindBuffer(v.ARRAY_BUFFER,t[2]),v.enableVertexAttribArray(a),v.vertexAttribPointer(a,1,v.FLOAT,!1,16,0),v.enableVertexAttribArray(r),v.vertexAttribPointer(r,1,v.FLOAT,!1,16,4),v.enableVertexAttribArray(o),v.vertexAttribPointer(o,1,v.FLOAT,!1,16,8)}Pe=_?function(e){const t=parseFloat(ue.value),n=parseFloat(de.value),a=parseFloat(ve.value)*e;let r=Math.floor(a);Math.random()<a-r&&r++;const i=me.value;for(let e=0;e<r;e++)if("Cosmic Muons (μ)"===i)se(null);else{const e=18;se([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}const o=.3+.8*n,c=.3+1.2*n;v.useProgram(p);const s=v.getAttribLocation(p,"a_state1"),u=v.getAttribLocation(p,"a_state2"),d=v.getAttribLocation(p,"a_state3");v.bindBuffer(v.ARRAY_BUFFER,ae[0]),v.enableVertexAttribArray(s),v.vertexAttribPointer(s,4,v.FLOAT,!1,0,0),v.bindBuffer(v.ARRAY_BUFFER,ae[1]),v.enableVertexAttribArray(u),v.vertexAttribPointer(u,4,v.FLOAT,!1,0,0),v.bindBuffer(v.ARRAY_BUFFER,ae[2]),v.enableVertexAttribArray(d),v.vertexAttribPointer(d,4,v.FLOAT,!1,0,0),v.bindBufferBase(v.TRANSFORM_FEEDBACK_BUFFER,0,ce[0]),v.bindBufferBase(v.TRANSFORM_FEEDBACK_BUFFER,1,ce[1]),v.bindBufferBase(v.TRANSFORM_FEEDBACK_BUFFER,2,ce[2]),v.uniform1f(v.getUniformLocation(p,"u_dt"),e),v.uniform1f(v.getUniformLocation(p,"u_bounds"),f),v.uniform1f(v.getUniformLocation(p,"u_dragBase"),o),v.uniform1f(v.getUniformLocation(p,"u_jitter"),c),v.uniform1f(v.getUniformLocation(p,"u_B"),t),v.enable(v.RASTERIZER_DISCARD),v.beginTransformFeedback(v.POINTS),v.drawArrays(v.POINTS,0,l),v.endTransformFeedback(),v.disable(v.RASTERIZER_DISCARD),v.bindBufferBase(v.TRANSFORM_FEEDBACK_BUFFER,0,null),v.bindBufferBase(v.TRANSFORM_FEEDBACK_BUFFER,1,null),v.bindBufferBase(v.TRANSFORM_FEEDBACK_BUFFER,2,null),v.disableVertexAttribArray(s),v.disableVertexAttribArray(u),v.disableVertexAttribArray(d);let _=ae;ae=ce,ce=_}:function(e){const t=parseFloat(ue.value),n=parseFloat(de.value),a=parseFloat(ve.value)*e;let r=Math.floor(a);Math.random()<a-r&&r++;const i=me.value;for(let e=0;e<r;e++)if("Cosmic Muons (μ)"===i)se(null);else{const e=18;se([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}const o=.3+.8*n,c=.3+1.2*n;function s(e){const t=43758.5453123*Math.sin(e);return t-Math.floor(t)}for(let n=0;n<l;n++){const a=4*n;let r=re[a],i=re[a+1],l=re[a+2],u=re[a+3],d=ie[a],v=ie[a+1],_=ie[a+2],m=ie[a+3],b=oe[a],A=oe[a+1],h=oe[a+2],R=oe[a+3];if(h>.5){const a=(m>.5?.6:1)*R,b=a*(-d*t);d+=a*(_*t)*e,_+=b*e;const F=Math.exp(-o*e);d*=F,v*=F,_*=F;const E=n;d+=(2*s(12.9898*E)-1)*c*e,v+=(2*s(78.233*E)-1)*c*e*.5,_+=(2*s(37.719*E)-1)*c*e,r+=d*e,i+=v*e,l+=_*e,u-=e,h=u>0&&Math.abs(r)<f&&Math.abs(i)<f&&Math.abs(l)<f?1:0,A*=Math.max(.25,.15*u)}re[a]=r,re[a+1]=i,re[a+2]=l,re[a+3]=u,ie[a]=d,ie[a+1]=v,ie[a+2]=_,ie[a+3]=m,oe[a]=b,oe[a+1]=A,oe[a+2]=h,oe[a+3]=R}v.bindBuffer(v.ARRAY_BUFFER,ae[0]),v.bufferSubData(v.ARRAY_BUFFER,0,re),v.bindBuffer(v.ARRAY_BUFFER,ae[1]),v.bufferSubData(v.ARRAY_BUFFER,0,ie),v.bindBuffer(v.ARRAY_BUFFER,ae[2]),v.bufferSubData(v.ARRAY_BUFFER,0,oe)};let Ce=performance.now(),Ye=0,Ne=0;requestAnimationFrame(function e(t){const n=Math.min(s,(t-Ce)/1e3);if(Ce=t,Ye++,Ne+=n,Ne>=1){const e=Ye/Ne;Ye=0,Ne=0,k&&(e<55&&X>.5?(X=Math.max(.5,X-.1),ye.value=X,j(),Le()):e>58&&X<1&&(X=Math.min(1,X+.1),ye.value=X,j(),Le()))}ee||(W+=.1*n),we||Pe(n);const a=parseFloat(_e.value);!function(e,t,n){v.bindFramebuffer(v.FRAMEBUFFER,e),v.viewport(0,0,N,O),v.disable(v.BLEND),v.useProgram(b),De(b),v.activeTexture(v.TEXTURE0),v.bindTexture(v.TEXTURE_2D,t),v.uniform1i(v.getUniformLocation(b,"u_prev"),0),v.uniform1f(v.getUniformLocation(b,"u_decay"),n),v.uniform2f(v.getUniformLocation(b,"u_texel"),1/N,1/O),v.drawArrays(v.TRIANGLE_STRIP,0,4),v.enable(v.BLEND),v.blendFunc(v.SRC_ALPHA,v.ONE),v.useProgram(A),Ie(A,ae),v.uniformMatrix4fv(v.getUniformLocation(A,"u_viewProj"),!1,te()),v.uniform1f(v.getUniformLocation(A,"u_dpr"),z),v.drawArrays(v.POINTS,0,l),v.bindFramebuffer(v.FRAMEBUFFER,null)}(P,w,a),Se&&function(e,t,n){v.bindFramebuffer(v.FRAMEBUFFER,e),v.viewport(0,0,u,u),v.disable(v.BLEND),v.useProgram(b),De(b),v.activeTexture(v.TEXTURE0),v.bindTexture(v.TEXTURE_2D,t),v.uniform1i(v.getUniformLocation(b,"u_prev"),0),v.uniform1f(v.getUniformLocation(b,"u_decay"),n),v.uniform2f(v.getUniformLocation(b,"u_texel"),.0078125,.0078125),v.drawArrays(v.TRIANGLE_STRIP,0,4),v.enable(v.BLEND),v.blendFunc(v.SRC_ALPHA,v.ONE),v.useProgram(h),Ie(h,ae),v.uniform1f(v.getUniformLocation(h,"u_bounds"),f),v.uniform1f(v.getUniformLocation(h,"u_dpr"),z),v.drawArrays(v.POINTS,0,l),v.bindFramebuffer(v.FRAMEBUFFER,null)}(C,I,a),function(e,t){v.disable(v.DEPTH_TEST),v.viewport(0,0,N,O),v.disable(v.BLEND),v.useProgram(m),De(m),v.activeTexture(v.TEXTURE0),v.bindTexture(v.TEXTURE_2D,e),v.uniform1i(v.getUniformLocation(m,"u_tex"),0),v.drawArrays(v.TRIANGLE_STRIP,0,4),v.enable(v.BLEND),v.blendFunc(v.SRC_ALPHA,v.ONE_MINUS_SRC_ALPHA),v.enable(v.DEPTH_TEST),v.depthMask(!0),v.clear(v.DEPTH_BUFFER_BIT),v.depthMask(!1),v.useProgram(F),function(e){const t=v.getAttribLocation(e,"a_pos");v.bindBuffer(v.ARRAY_BUFFER,M),v.enableVertexAttribArray(t),v.vertexAttribPointer(t,3,v.FLOAT,!1,0,0)}(F),v.uniformMatrix4fv(v.getUniformLocation(F,"u_viewProj"),!1,te()),v.uniform1f(v.getUniformLocation(F,"u_time"),t/1e3),v.drawArrays(v.TRIANGLES,0,576),v.depthMask(!0),v.useProgram(R),function(e){const t=v.getAttribLocation(e,"a_pos"),n=v.getAttribLocation(e,"a_norm");v.bindBuffer(v.ARRAY_BUFFER,B),v.enableVertexAttribArray(t),v.vertexAttribPointer(t,3,v.FLOAT,!1,24,0),v.enableVertexAttribArray(n),v.vertexAttribPointer(n,3,v.FLOAT,!1,24,12)}(R);const n=ne();if(v.uniformMatrix4fv(v.getUniformLocation(R,"u_viewProj"),!1,te()),v.uniform3f(v.getUniformLocation(R,"u_eye"),n[0],n[1],n[2]),v.depthMask(!1),v.enable(v.CULL_FACE),v.cullFace(v.FRONT),v.drawArrays(v.TRIANGLES,0,36),v.cullFace(v.BACK),v.drawArrays(v.TRIANGLES,0,36),v.disable(v.CULL_FACE),v.depthMask(!0),v.disable(v.BLEND),v.useProgram(E),function(e){const t=v.getAttribLocation(e,"a_pos");v.bindBuffer(v.ARRAY_BUFFER,x),v.enableVertexAttribArray(t),v.vertexAttribPointer(t,3,v.FLOAT,!1,0,0)}(E),v.uniformMatrix4fv(v.getUniformLocation(E,"u_viewProj"),!1,te()),v.uniform3f(v.getUniformLocation(E,"u_color"),.4,.6,.7),v.lineWidth(3),v.drawArrays(v.LINES,0,24),v.lineWidth(1),v.enable(v.BLEND),v.disable(v.DEPTH_TEST),Se){const e=Math.floor(.3*Math.min(N,O));v.viewport(10,10,e,e),v.disable(v.BLEND),v.useProgram(m),De(m),v.activeTexture(v.TEXTURE0),v.bindTexture(v.TEXTURE_2D,D),v.uniform1i(v.getUniformLocation(m,"u_tex"),0),v.drawArrays(v.TRIANGLE_STRIP,0,4),v.viewport(0,0,N,O)}}(U,t);let r=U;U=w,w=r;let i=P;P=S,S=i,Se&&(r=D,D=I,I=r,i=C,C=Y,Y=i),requestAnimationFrame(e)});for(let e=0;e<48;e++){const e=18;se([(2*Math.random()-1)*e,(2*Math.random()-1)*e,(2*Math.random()-1)*e])}V()})();